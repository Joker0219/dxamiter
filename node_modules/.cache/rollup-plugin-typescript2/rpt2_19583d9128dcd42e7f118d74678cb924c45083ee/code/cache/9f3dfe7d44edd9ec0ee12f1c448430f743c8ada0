{"code":"import { getLastEvent, getSelectors, getLines } from \"../../utils/index\";\r\nexport function injectError(callback) {\r\n    window.addEventListener('error', function (event) {\r\n        let lastEvent = getLastEvent();\r\n        let target = event.target;\r\n        if (target && ((target === null || target === void 0 ? void 0 : target.src) || (target === null || target === void 0 ? void 0 : target.href))) {\r\n            // 资源加载的错误，必须要捕获阶段，否则捕获不到。\r\n            console.log(event);\r\n            callback({\r\n                kind: 'stability',\r\n                type: 'error',\r\n                errorType: 'resourceError',\r\n                filename: target.src || target.href,\r\n                tagName: target.tagName,\r\n                timeStamp: event.timeStamp,\r\n                selector: getSelectors(event.path || target),\r\n                message: \"\"\r\n            });\r\n        }\r\n        else {\r\n            callback({\r\n                kind: 'stability',\r\n                type: 'error',\r\n                errorType: 'jsError',\r\n                message: event.message,\r\n                filename: event.filename,\r\n                position: (event.lineno || 0) + \":\" + (event.colno || 0),\r\n                stack: getLines(event.error.stack),\r\n                selector: lastEvent ? getSelectors(lastEvent.path || lastEvent.target) : '' //CSS选择器\r\n            });\r\n        }\r\n    }, true); // true代表在捕获阶段调用,false代表在冒泡阶段捕获,使用true或false都可以\r\n}\r\n","references":["/Users/gavin/Documents/front-end-for-speed/dxamiter/src/utils/index.ts"]}
